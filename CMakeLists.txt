cmake_minimum_required(VERSION 3.14)

project(HeliosHermes LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Core SerialPort Mqtt)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Core SerialPort Mqtt)

add_executable(HeliosHermes
  main.cpp
  CommunicationLayer/CommDeviceControl/I_CommDevice.h CommunicationLayer/CommDeviceControl/I_ConnectionService.h CommunicationLayer/CommDeviceControl/I_MessageForwarder.h CommunicationLayer/CommDeviceControl/MqttMessageForwarder.cpp CommunicationLayer/CommDeviceControl/MqttMessageForwarder.h CommunicationLayer/CommDeviceControl/OutputRadioCommDevice.cpp CommunicationLayer/CommDeviceControl/OutputRadioCommDevice.h CommunicationLayer/CommDeviceControl/RadioCommDevice.cpp CommunicationLayer/CommDeviceControl/RadioCommDevice.h CommunicationLayer/DataPopulators/AuxBmsPopulator.cpp CommunicationLayer/DataPopulators/AuxBmsPopulator.h CommunicationLayer/DataPopulators/BatteryFaultsPopulator.cpp CommunicationLayer/DataPopulators/BatteryFaultsPopulator.h CommunicationLayer/DataPopulators/BatteryPopulator.cpp CommunicationLayer/DataPopulators/BatteryPopulator.h CommunicationLayer/DataPopulators/CcsPopulator.cpp CommunicationLayer/DataPopulators/CcsPopulator.h CommunicationLayer/DataPopulators/DriverControlsPopulator.cpp CommunicationLayer/DataPopulators/DriverControlsPopulator.h CommunicationLayer/DataPopulators/KeyMotorPopulator.cpp CommunicationLayer/DataPopulators/KeyMotorPopulator.h CommunicationLayer/DataPopulators/LightsPopulator.cpp CommunicationLayer/DataPopulators/LightsPopulator.h CommunicationLayer/DataPopulators/MotorDetailsPopulator.cpp CommunicationLayer/DataPopulators/MotorDetailsPopulator.h CommunicationLayer/DataPopulators/MotorFaultsPopulator.cpp CommunicationLayer/DataPopulators/MotorFaultsPopulator.h CommunicationLayer/DataPopulators/MpptPopulator.cpp CommunicationLayer/DataPopulators/MpptPopulator.h CommunicationLayer/MessagingFramework/AuxBmsMessage.cpp CommunicationLayer/MessagingFramework/AuxBmsMessage.h CommunicationLayer/MessagingFramework/BatteryFaultsMessage.cpp CommunicationLayer/MessagingFramework/BatteryFaultsMessage.h CommunicationLayer/MessagingFramework/BatteryMessage.cpp CommunicationLayer/MessagingFramework/BatteryMessage.h CommunicationLayer/MessagingFramework/DriverControlsMessage.cpp CommunicationLayer/MessagingFramework/DriverControlsMessage.h CommunicationLayer/MessagingFramework/KeyMotorMessage.cpp CommunicationLayer/MessagingFramework/KeyMotorMessage.h CommunicationLayer/MessagingFramework/LightsMessage.cpp CommunicationLayer/MessagingFramework/LightsMessage.h CommunicationLayer/MessagingFramework/MessageDecodingHelpers.cpp CommunicationLayer/MessagingFramework/MessageDecodingHelpers.h CommunicationLayer/MessagingFramework/MessageDefines.cpp CommunicationLayer/MessagingFramework/MessageDefines.h CommunicationLayer/MessagingFramework/MotorDetailsMessage.cpp CommunicationLayer/MessagingFramework/MotorDetailsMessage.h CommunicationLayer/MessagingFramework/MotorFaultsMessage.cpp CommunicationLayer/MessagingFramework/MotorFaultsMessage.h CommunicationLayer/MessagingFramework/MpptMessage.cpp CommunicationLayer/MessagingFramework/MpptMessage.h CommunicationLayer/PacketChecksumChecker/I_PacketChecksumChecker.h CommunicationLayer/PacketChecksumChecker/PacketChecksumChecker.cpp CommunicationLayer/PacketChecksumChecker/PacketChecksumChecker.h CommunicationLayer/PacketDecoder/I_PacketDecoder.h CommunicationLayer/PacketDecoder/PacketDecoder.cpp CommunicationLayer/PacketDecoder/PacketDecoder.h CommunicationLayer/PacketSynchronizer/I_PacketSynchronizer.h CommunicationLayer/PacketSynchronizer/PacketSynchronizer.cpp CommunicationLayer/PacketSynchronizer/PacketSynchronizer.h CommunicationLayer/PacketUnstuffer/I_DataInjectionService.h CommunicationLayer/PacketUnstuffer/I_PacketUnstuffer.h CommunicationLayer/PacketUnstuffer/PacketUnstuffer.cpp CommunicationLayer/PacketUnstuffer/PacketUnstuffer.h CommunicationLayer/CommunicationContainer.cpp CommunicationLayer/CommunicationContainer.h
  HeliosHermes.h HeliosHermes.cpp
  BusinessLayer/JsonForwarder/I_JsonForwarder.h BusinessLayer/JsonForwarder/JsonDefines.h BusinessLayer/JsonForwarder/JsonForwarder.cpp BusinessLayer/JsonForwarder/JsonForwarder.h BusinessLayer/JsonMessageBuilder/I_JsonMessageBuilder.h BusinessLayer/JsonMessageBuilder/JsonMessageBuilder.cpp BusinessLayer/JsonMessageBuilder/JsonMessageBuilder.h BusinessLayer/BusinessContainer.cpp BusinessLayer/BusinessContainer.h DataLayer/AuxBmsData/AuxBmsData.cpp DataLayer/AuxBmsData/AuxBmsData.h DataLayer/AuxBmsData/I_AuxBmsData.h DataLayer/BatteryData/BatteryData.cpp DataLayer/BatteryData/BatteryData.h DataLayer/BatteryData/I_BatteryData.h DataLayer/BatteryFaultsData/BatteryFaultsData.cpp DataLayer/BatteryFaultsData/BatteryFaultsData.h DataLayer/BatteryFaultsData/I_BatteryFaultsData.h DataLayer/CcsData/CcsData.cpp DataLayer/CcsData/CcsData.h DataLayer/CcsData/I_CcsData.h DataLayer/DriverControlsData/DriverControlsData.cpp DataLayer/DriverControlsData/DriverControlsData.h DataLayer/DriverControlsData/I_DriverControlsData.h DataLayer/KeyMotorData/I_KeyMotorData.h DataLayer/KeyMotorData/KeyMotorData.cpp DataLayer/KeyMotorData/KeyMotorData.h DataLayer/LightsData/I_LightsData.h DataLayer/LightsData/LightsData.cpp DataLayer/LightsData/LightsData.h DataLayer/MotorDetailsData/I_MotorDetailsData.h DataLayer/MotorDetailsData/I_MotorDetailsUnit.h DataLayer/MotorDetailsData/MotorDetailsData.cpp DataLayer/MotorDetailsData/MotorDetailsData.h DataLayer/MotorDetailsData/MotorDetailsUnit.cpp DataLayer/MotorDetailsData/MotorDetailsUnit.h DataLayer/MotorFaultsData/I_MotorFaultsData.h DataLayer/MotorFaultsData/MotorFaultsData.cpp DataLayer/MotorFaultsData/MotorFaultsData.h DataLayer/MpptData/I_MpptData.h DataLayer/MpptData/I_MpptUnit.h DataLayer/MpptData/MpptData.cpp DataLayer/MpptData/MpptData.h DataLayer/MpptData/MpptUnit.cpp DataLayer/MpptData/MpptUnit.h DataLayer/DataContainer.cpp DataLayer/DataContainer.h DataLayer/SerialDefines.h InfrastructureLayer/Logging/Logging.cpp InfrastructureLayer/Logging/Logging.h InfrastructureLayer/Settings/I_Settings.h InfrastructureLayer/Settings/Settings.cpp InfrastructureLayer/Settings/Settings.h InfrastructureLayer/InfrastructureContainer.cpp InfrastructureLayer/InfrastructureContainer.h


)
target_link_libraries(HeliosHermes Qt${QT_VERSION_MAJOR}::Core Qt${QT_VERSION_MAJOR}::Mqtt Qt${QT_VERSION_MAJOR}::SerialPort)

include(GNUInstallDirs)
install(TARGETS HeliosHermes
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)
